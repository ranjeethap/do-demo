name: CI/CD to DOKS (DOCR â†’ Dev)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

env:
  APP_NAME: doks-flask
  IMAGE: registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/doks-flask

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Login to DOCR
        run: doctl registry login

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.sha }}
            ${{ env.IMAGE }}:latest

      - name: Set tag output
        id: tag
        run: echo "image=${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy_dev:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Kubeconfig
        run: doctl kubernetes cluster kubeconfig save "${{ secrets.DO_CLUSTER }}"

      - name: Roll dev to new image
        env:
          IMAGE: registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/doks-flask
          TAG:   ${{ github.sha }}
        run: |
          set -e
          kubectl -n dev set image deployment/doks-flask app="${IMAGE}:${TAG}"
          kubectl -n dev rollout status deployment/doks-flask --timeout=300s
