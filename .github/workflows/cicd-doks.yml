name: CI/CD to DOKS (DOCR â†’ Dev)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

env:
  IMAGE: registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/${{ secrets.DOCR_REPO }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.sha }}
    steps:
      - uses: actions/checkout@v4

      # NEW: set DOCKER_CONFIG in a way all later steps inherit it
      - name: Set DOCKER_CONFIG path
        run: echo "DOCKER_CONFIG=$RUNNER_TEMP/.docker" >> "$GITHUB_ENV"

      - uses: docker/setup-buildx-action@v3

      - name: Sanity check secrets and IMAGE
        run: |
          set -euo pipefail
          [[ -n "${{ secrets.DO_TOKEN }}" ]] || { echo "DO_TOKEN is empty"; exit 1; }
          [[ -n "${{ secrets.DOCR_REGISTRY }}" ]] || { echo "DOCR_REGISTRY is empty"; exit 1; }
          [[ -n "${{ secrets.DOCR_REPO }}"     ]] || { echo "DOCR_REPO is empty"; exit 1; }
          echo "IMAGE=${IMAGE}"
          if ! [[ "${IMAGE}" =~ ^registry\.digitalocean\.com/[a-z0-9-]+/[a-z0-9-]+$ ]]; then
            echo "IMAGE path malformed: ${IMAGE}"; exit 1;
          fi

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Verify DO account & registry access
        run: |
          set -euo pipefail
          echo "=== IMAGE we will push ==="
          echo "IMAGE=registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/${{ secrets.DOCR_REPO }}"
          echo "=== doctl account get ==="
          doctl account get
          echo "=== doctl registry get ==="
          doctl registry get || { echo "Registry not visible to token"; exit 1; }

      - name: Probe DOCR write credentials (must return 200)
        run: |
          set -euo pipefail
          # If this 401s, the PAT is missing Container Registry write scope or belongs to the wrong team
          code=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.DO_TOKEN }}" \
            "https://api.digitalocean.com/v2/registry/docker-credentials?read_write=true&expiry_seconds=600")
          echo "docker-credentials(read_write=true) HTTP=$code"
          if [[ "$code" != "200" ]]; then
            echo "Your DO_TOKEN does not have write scope to the Container Registry (or wrong team)."; exit 1;
          fi


      - name: Prepare DOCR auth (write docker config)
        run: |
          set -euo pipefail
          mkdir -p "$DOCKER_CONFIG"
          doctl registry docker-config > "$DOCKER_CONFIG/config.json"
          echo "Docker config at: $DOCKER_CONFIG/config.json"
          cat "$DOCKER_CONFIG/config.json" | jq '.auths | keys'
          grep -q "registry.digitalocean.com" "$DOCKER_CONFIG/config.json" \
            || { echo "No DOCR creds in docker config"; exit 1; }

      - name: Build & push (app/Dockerfile)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./app/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.sha }}
            ${{ env.IMAGE }}:latest

      - name: Expose tag
        id: tag
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

  deploy_dev:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Kubeconfig (DOKS)
        run: doctl kubernetes cluster kubeconfig save "${{ secrets.DO_CLUSTER }}"

      - name: Roll dev to new image
        env:
          IMAGE: registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/${{ secrets.DOCR_REPO }}
          TAG:   ${{ needs.build_and_push.outputs.image_tag }}
        run: |
          set -euo pipefail
          kubectl -n dev set image deployment/doks-flask app="${IMAGE}:${TAG}"
          kubectl -n dev set env   deployment/doks-flask APP_VERSION- || true
          kubectl -n dev rollout status deployment/doks-flask --timeout=300s